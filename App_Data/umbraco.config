<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE root [ 
<!ELEMENT blogItem ANY>
<!ATTLIST blogItem id ID #REQUIRED>
<!ELEMENT BlogPage ANY>
<!ATTLIST BlogPage id ID #REQUIRED>
<!ELEMENT HomePage ANY>
<!ATTLIST HomePage id ID #REQUIRED>
<!ELEMENT TextPage ANY>
<!ATTLIST TextPage id ID #REQUIRED>

]>
<root id="-1">
  <HomePage id="1052" parentID="-1" level="1" creatorID="0" sortOrder="0" createDate="2018-06-27T11:57:48" updateDate="2018-06-27T11:58:26" nodeName="Welcome" urlName="welcome" path="-1,1052" isDoc="" nodeType="1048" creatorName="scratch" writerName="scratch" writerID="0" template="1047" nodeTypeAlias="HomePage">
    <promoTitle><![CDATA[Welcome to my umbraco scratch test]]></promoTitle>
    <promoSubtitle><![CDATA[<p>The username and password for the back end is scratch@test.com : test</p>]]></promoSubtitle>
    <promoButtonText><![CDATA[Let's break stuff!]]></promoButtonText>
    <TextPage id="1054" parentID="1052" level="2" creatorID="0" sortOrder="0" createDate="2018-06-27T12:16:11" updateDate="2018-06-27T12:17:55" nodeName="About Us" urlName="about-us" path="-1,1052,1054" isDoc="" nodeType="1051" creatorName="scratch" writerName="scratch" writerID="0" template="1050" nodeTypeAlias="TextPage">
      <title><![CDATA[About Us]]></title>
      <bodyText><![CDATA[<p>I'm a single developer there is no <strong>us</strong> lol.</p>
<p>Im just playing around with an old version of Umbraco before taking over an existing website from a client.</p>
<p>Im currently using v7.2.8 and there are many differences from what the tutorial videos and documentations based of more current version but it's still mostly the same and still easy to follow.</p>
<p>Please check out any content I have added to this repository.</p>
<p>Being a php programmer I deviated a lot on my tutorial adventure trying to understand the internal workings of the Umbraco CMS and have discovered some things that other might find useful...</p>]]></bodyText>
      <quote><![CDATA[Doing, is the best way to learn.]]></quote>
      <quotedPerson><![CDATA[Brad H.]]></quotedPerson>
    </TextPage>
    <BlogPage id="1070" parentID="1052" level="2" creatorID="0" sortOrder="1" createDate="2018-06-27T14:46:51" updateDate="2018-06-27T14:53:33" nodeName="1up Blog" urlName="1up-blog" path="-1,1052,1070" isDoc="" nodeType="1069" creatorName="scratch" writerName="scratch" writerID="0" template="1068" nodeTypeAlias="BlogPage">
      <blogTitle><![CDATA[Discoveries made during my Umbraco Adventure]]></blogTitle>
      <blogAboutText><![CDATA[<p>Coming from a PHP programming background where I build entire web applications, systems, and small frameworks from scratch I really felt the need to understand some of the inner workings of Umbraco.</p>
<p>I was just following the basic tutorial but I often deviated from the path because I wanted to know what Umbraco was doing with files and databases.</p>
<p>As such, I discovered a couple of things on the way that might be helpful to others.</p>]]></blogAboutText>
      <blogImage>1061</blogImage>
      <blogItem id="1071" parentID="1070" level="3" creatorID="0" sortOrder="0" createDate="2018-06-27T15:10:46" updateDate="2018-06-27T18:45:06" nodeName="Umbraco Basics" urlName="umbraco-basics" path="-1,1052,1070,1071" isDoc="" nodeType="1059" creatorName="scratch" writerName="scratch" writerID="0" template="1058" nodeTypeAlias="blogItem">
        <blogItemImage>1062</blogItemImage>
        <blogItemTeaser><![CDATA[Just some of the basics of Umbraco]]></blogItemTeaser>
        <blogItemBody><![CDATA[<p>Hello and welcome to the first piece of content created with the new template!</p>
<p> What I've learned so far:</p>
<ul>
<li> Document Types
<ul>
<li>Essentially they are data structures (I'm guessing represented by generate class object maybe???) with properties.</li>
<li>Properties are data types that represent fields for content creators to fill out.
<ul>
<li>These fields are represented by modules such as rich text editors, image sources etc as form elements for content creators to fill out in the back end.</li>
<li>They determine the structure of content to be output with an associated template</li>
</ul>
</li>
<li>Note: Tabs in document types are not tabs in html they're just for organizing the data entry UI into organised tabs to make it easier for content creators.</li>
</ul>
</li>
<li>Templates
<ul>
<li>cshtml files that make use of the Document type data structure filled out by content creators.</li>
<li>HTML and razor c# injections. ( can be used with web forms to but that isn't covered in the umbraco documentation since it's depreciated.)</li>
</ul>
</li>
<li>Content
<ul>
<li>Your reading it now. :P</li>
</ul>
</li>
<li>CSS and Script files.
<ul>
<li>Copying files into the css and js folders etc in the project root will make them appear in umbraco settings.
<ul>
<li>But only when done via visual studio. (in this version) Files wernt shoing up if just copied in explorer.</li>
<li>But in the tutorials for the current umbraco version just copying files across worked completely fine.</li>
</ul>
</li>
</ul>
</li>
</ul>
<p> </p>]]></blogItemBody>
      </blogItem>
      <blogItem id="1073" parentID="1070" level="3" creatorID="0" sortOrder="1" createDate="2018-06-27T15:21:05" updateDate="2018-06-27T23:26:51" nodeName="Database Configurations" urlName="database-configurations" path="-1,1052,1070,1073" isDoc="" nodeType="1059" creatorName="scratch" writerName="scratch" writerID="0" template="1058" nodeTypeAlias="blogItem">
        <blogItemImage>1072</blogItemImage>
        <blogItemTeaser><![CDATA[Watch Umbraco database changes in Visual Studio]]></blogItemTeaser>
        <blogItemBody><![CDATA[<p><strong>But why? (some background)</strong></p>
<p>I have been breathing PHP the last few years building my own OO frameworks from scratch.</p>
<p>Being familiar with Apache and MySQL I usually writ my own database adaptors and map all data to class objects / models and kind of build my own MVC framework as I go.</p>
<p>I really prefer to know every part of the code and understand exactly whats going on.</p>
<p>I also prefer to use version control so setting up a local server environment was what I needed to test with umbraco to see any quirks before taking over some clients web sites.</p>
<p>So I downloaded and ran v7.2.8 and started some tutorials.</p>
<p>Instantly I thought was hey, I don't see any models generated or files changing at all (tracking with git) when I add stuff.</p>
<p>It must be storing EVERYTHING in a database. (might not be true for newer versions.)</p>
<p>I needed to see what Umbraco was doing in the database as well as the files structure to get a better grasp on this Umbraco thing :P.</p>
<p>Ive used severl MVC framworks before in PHP and have worked with ASP.NET MVC and entity Framework in the past and was kind of expecting Umbraco to be generating models for Document Types.</p>
<p>My experience with IIS and MS SQL Servers is a bit lacking. I had worked in ASP.NET MVC with windows server in the past and even setup windows servers with IIS and Databases but that was some time ago. So I just wanted to use the IIS Express and integrated support in Visual Studio.</p>
<p>I was wanting to see the database interactions of a new umbraco installation to see how the cms was working.</p>
<p><strong>Anyway enough reasoning. Hers what I learned..</strong></p>
<p>By default Umbraco uses SQL Compact database stored in a file:<br />Umbraco.sdf</p>
<p>I couldnt add this file to the db explorer in VS and trying to look at it in WebMatrix made it instantly crash. I read somewhere about SQL Compact support being fairly limited so I looked at changing the Database.</p>
<p>Now in VS you can just right click an add a database from the DB explorer and it there is nothing there to tell you that you can use: (localdb)\MSSQLLocalDB as an address and use Windows Authentification. This works but then when you clone the repo to a different machine with different windows account Umbraco is locked out fo the database it created so this wasnt the answer.</p>
<p> </p>
<p><strong>Creating a local SQL Database in Visual Studio</strong></p>
<p>Right click on the project (just under the solution root in the solution explorer) and click Add new item..</p>
<p>Then search for SQL and choose SQL Database for c#.</p>
<p>VS will promtp you to save it in the AappData folder, say yes.</p>
<p>This creates a .mdf file.</p>
<p>Then right click on the new database properties and copy the connection string to web.config file.</p>
<p>&lt;connectionStrings&gt;<br /> &lt;remove name="umbracoDbDSN" /&gt;<br /> &lt;add name="umbracoDbDSN" connectionString="Server=(LocalDB)\MSSQLLocalDB;AttachDbFilename=C:\TPCMS\Tests\umbraco-scratch\App_Data\umbraco-scratch.mdf;Integrated Security=True" providerName="System.Data.SqlClient" /&gt;<br /> &lt;!-- Important: If you're upgrading Umbraco, do not clear the connection string / provider name during your web.config merge. --&gt;<br /> &lt;/connectionStrings&gt;</p>
<p>Or during Umbraco setup (see reinstalling if you already have it setup and have content/settings to keep) do customize and specify the server address: (localdb)\MSSQLLocalDB with automatic authorization configuration.</p>
<p> </p>
<p>Now you can see the database tables Umbraco creates and see all the data inside and how it is tracking content and document types.</p>
<p><strong>Change connection string in Web Config to use reletive path.</strong></p>
<p>So another problem with the new database was that cling the repo to a different folder breaks Umbraco because there is an absolute path to the DB file.</p>
<p>So there seemed quite a number of solutions to this but the only one that seems to be reliable was this: </p>
<pre><span>|DataDirectory|</span>
<br />This refers to the App_Data folder. So</pre>
<pre><span>|DataDirectory|\database.mdf</span>
</pre>
<p>Then when you clone or move the project around you wont get issues.</p>
<p>Also it might pay to make sure you save the solution file (if VS asks on exit) into the project folder. Then edit the following two lines inside that file to make it use reletive paths so that if you open the solution in a different IDE such as Rider then it will still build.</p>
<pre>Debug.AspNetCompiler.PhysicalPath = ".\"<br />Release.AspNetCompiler.PhysicalPath = ".\"
</pre>
<p><strong>PS:</strong> An added problem with a local DB file is that git can not add the file while VS is open. Unfortunately you need to close VS in order to add the DB file for commits.</p>
<p> </p>
<p><strong>How to re-install an already used Umbraco that had the default database file.</strong></p>
<p>WARNING: Before doing this expeort your Document types to UDT files and copy and paste any test you need to keep form your content.</p>
<p>(This could be avoided by converting the Umbraco.sdf file to MS SQL mdf file format instead but I had not tried this.)</p>
<p>Your templates should be fine esp if you have git history.</p>
<p>Change the following in the web config file.</p>
<p>&lt;connectionStrings&gt;<br /> &lt;remove name="umbracoDbDSN" /&gt;<br /> &lt;add name="umbracoDbDSN" connectionString="" providerName="" /&gt;<br /> &lt;/connectionStrings&gt;</p>
<p>You will also need to clear your umbracoConfigurationStatus within AppSettings, like so:<br /> &lt;add key="umbracoConfigurationStatus" value="" /&gt;</p>
<p> Warning: regardless of weather you have retained your local files, all the document types (data structures) are not modeled in code at all. They exist entirely in the database. So you will have to re-create them from scratch again.</p>
<p>However, when you create a document type again and choose to create a template it will not replace the template that already exists.<br />I found that my cshtml files were still the same after it recreated the templates.</p>
<p> </p>
<p>So yes that was a lot of stuffing around just to do a tutorial in a local environment that can be cloned and moved around everywhere (and some more things to do for trying different IDE's) but now I know how web config works, connection strings and creating project file based SQL Databases.</p>
<p>This knowledge will come in handy later I am sure.</p>]]></blogItemBody>
      </blogItem>
      <blogItem id="1075" parentID="1070" level="3" creatorID="0" sortOrder="2" createDate="2018-06-27T15:26:42" updateDate="2018-06-27T15:26:42" nodeName="File Structure" urlName="file-structure" path="-1,1052,1070,1075" isDoc="" nodeType="1059" creatorName="scratch" writerName="scratch" writerID="0" template="1058" nodeTypeAlias="blogItem">
        <blogItemImage>1074</blogItemImage>
        <blogItemTeaser><![CDATA[File structure migrating repositories and reinstalling Umbraco]]></blogItemTeaser>
        <blogItemBody><![CDATA[<p>talk about what happened when reinstalling.</p>
<p>the templates master templates etc</p>
<p>adding scripts and css to vs project vs just copying files over</p>
<p>exporting datatypes to UDT files</p>]]></blogItemBody>
      </blogItem>
      <blogItem id="1078" parentID="1070" level="3" creatorID="0" sortOrder="3" createDate="2018-06-27T23:29:52" updateDate="2018-06-27T23:32:30" nodeName="Choosing an IDE" urlName="choosing-an-ide" path="-1,1052,1070,1078" isDoc="" nodeType="1059" creatorName="scratch" writerName="scratch" writerID="0" template="1058" nodeTypeAlias="blogItem">
        <blogItemImage>1065</blogItemImage>
        <blogItemTeaser><![CDATA[I'd much prefer rider or VS Code but honestly I think you best use Visual Studio. Unless...]]></blogItemTeaser>
        <blogItemBody><![CDATA[<p>So I have been using PHP Storm for a long time now and Im so acustomed to the shortcuts and features. So naturally I looked at Rider form Jetbrains. I also tested VS Code and compared Visual Studio as well. here the low down.....</p>
<p> </p>
<p><strong>Visual Studio is sooooo slow to open, then to load and clunky as AF with intellisense suggestions!</strong></p>]]></blogItemBody>
      </blogItem>
    </BlogPage>
  </HomePage>
</root>